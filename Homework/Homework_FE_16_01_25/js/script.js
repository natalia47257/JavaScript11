// уровень сложности 1:
//  ДЗ 
//  1 - проверить на палиандром и учесть регистр букв. 
// Anna !== annA (надо исправить чтобы регистр не вляил на результат)

let word = "Anna";
let reversedWord = "";

// Приводим слово к одному регистру (например, к нижнему)
// Метод toLowerCase() преобразует все буквы слова в нижний регистр Anna -> anna
// Иначе слово Аnna не является палиандромом, тк JavaScript - регистрозависим
let lowerCaseWord = word.toLowerCase();

// Переворачиваем слово с помощью цикла
// [i] - обращение к конкретному символу слова по индексу. Индексы начинатются с 0.
for (let i = lowerCaseWord.length - 1; i >= 0; i = i - 1) {
    reversedWord = reversedWord + lowerCaseWord[i];
}

// Проверяем, является ли слово палиндромом
if (lowerCaseWord === reversedWord) {
    console.log("Палиндром");
} else {
    console.log("Не палиндром");
}


//2. Средняя задача


// Задаем строку с числами, разделенными запятыми
let numbersString = "1, 2, 3, 4, 5";

// Разбиваем строку с числами на массив подстрок (преобразуем строку из чисел на массив строковых значений, а не чисел!)
// Meтод .split(",") разделяет строку на части по запятым
// "1,2,3,4,5" --> ["1", "2", "3", "4", "5"]
// Метод Number() преобразует строки на числа, чтобы их можно было складывать
// ["1", "2", "3", "4", "5"] -->  [1, 2, 3, 4, 5]  

let numbersArray = numbersString.split(","); // ["1", "2", "3", "4", "5"]

// Задаем переменную для хранения суммы. Начальное значение равно нулю.
let sum = 0;

// Проходим по массиву и добавляем каждое число к сумме
for (let i = 0; i < numbersArray.length; i = i + 1) {
    sum = sum + parseInt(numbersArray[i]); // Преобразуем строку в число и прибавляем к сумме
}

// Выводим результат
console.log("Сумма чисел: " + sum);

// Простая задача
// Дана массив из строк. Программа должна подсчитать количество слов, которые содержат больше 5 символов.
// 1. Исходный массив строк
let sentences = [
    "Дети любят лето, море и мороженое",
    "Дети любят кино и мультики",
    "Дети любят играть и веселиться"
];

// 2. Переменная cout для подсчета слов длинее 5 символов
let count = 0;

// 3. Проходим по каждой строке в массиве
sentences.forEach(sentence => {   // или sentences.forEach(function(sentence) {
    // 4. Разбиваем строку на массив слов, используя пробел как разделитель
    let words = sentence.split(" ");

    // 5. Проверяем каждое слово в текущей строке
    words.forEach(word => {   //  или  words.forEach(function(word) {
        if (word.length > 5) { // Если длина слова больше 5 символов
            count++; // Увеличиваем счетчик
        }
    });
});

// 6. Выводим результат
console.log("Количество слов длиннее 5 символов:", count); // 4

// Вариант2
let sentences2 = [
    "Дети любят лето, море и мороженое",
    "Дети любят кино и мультики",
    "Дети любят играть и веселиться"
];

let count2 = 0;

for (let i = 0; i < sentences2.length; i = i + 1) {
    let words2 = sentences2[i].split(" ");
    for (let j = 0; j < words2.length; j = j + 1) {
        if (words2[j].length > 5) {
            console.log(`Слово: "${words2[j]}", длина: ${words2[j].length}`);
        }
    }
}

// Простая задача
// Создайте массив чисел от 1 до 20. Выведите все четные числа из этого массива.
// 1. Cоздаем пустой массив numbers3, в который будем добавлять числа
let numbers3 = [];
for (let i = 1; i <= 20; i++) {
    numbers3.push(i); // на каждой итерации добавляем текущее значение i в массив numbers3 c помощью метода push() // [1, 2, 3, 4, 5, 6, ... 20]
    // метод push добавляет один или несколько элементов в конец массива. Изменяет исходный массив, добавляя элементы в его конец, возвращает новую длину массива.
}

let evenNumbers3 = [];
for (let i = 0; i < numbers3.length; i++) {
    if (numbers3[i] % 2 === 0) {
        evenNumbers3.push(numbers3[i]);
    }
}
console.log(evenNumbers3);

// Сложная задача
// Дана строка из нескольких слов, разделенных пробелами. Напишите программу, которая переворачивает каждое слово в строке и выводит полученный результат.

let inputStr = "Hello world";
function reverseWords(str) {
    // Разбиваем строку на слова с помощью метода split(), используя пробел как разделитель
    let words = str.split(" ");

    // Переворачиваем каждое слово с помощью map и перевод в массив
    // Метод map позволяет позволяет пройтись по каждому элементу массива и применить к нему функцию
    // word.split("") превращает слово в массив букв // ["H", "e", "l", "l", "o"]
    // .reverse() переворачивает массив // ["H", "e", "l", "l", "o"] ->["o", "l", "l", "H"]
    // .join собирает массив символов в строку
    let reversedWords = words.map(function (word) {
        return word.split("").reverse().join("");
    });

    // Собираем результат обратно в строку с разделением пробелами
    return reversedWords.join(" ");
}

let result = reverseWords(inputStr);
console.log(result);  // Вывод: "olleH dlrow"


// Средняя задача
// Сгенерируйте массив из 10 случайных чисел от 1 до 100. Найдите максимальное и минимальное число в массиве, а также их разницу.

// При помощи Math.random генерируем массив случайных чисел от 0 до 1 и умножаем на 100, чтобы получить диапазон от 0 до 99.999,
// Math.floor округляет в меньшую сторону до целого числа
// добавляем +1, чтобы получить диапазон от 1 до 100
// запускаем цикл for, который выполняется 10 раз и заполняет массив numbers
let numbers = [];
for (let i = 0; i < 10; i++) {
    numbers.push(Math.floor(Math.random() * 100) + 1);
}

// Находим максимальное и минимальное число при помощи spread-оператора(...), который позволяет "разворачивать" элементы массива, обьекта или строки. Используется для копирования, обьединения и передачи значений
let maxNumber = Math.max(...numbers);
let minNumber = Math.min(...numbers);

// Вычисляем разницу
let difference = maxNumber - minNumber;

// Выводим результаты
console.log("Массив случайных чисел:", numbers); //[30, 84, 69, 79, 94, 66, 10, 61, 50, 62] 78, 91]
console.log("Максимальное число:", maxNumber); //94
console.log("Минимальное число:", minNumber);// 10
console.log("Разница:", difference); // 84


// Сложная задача
// Дан массив чисел, например [10, 15, 3, 7, 20, 8, 25]. Найдите два числа, сумма которых равна 25, и выведите их. Если таких чисел нет, выведите сообщение об этом.

let numbers4 = [10, 15, 3, 7, 20, 8, 25];
function findSum(arr, summa) {
    for (let i = 0; i < arr.length; i++) { // внешний цикл проходит по каждому
                                            // элементу массива
        for (let j = i + 1; j < arr.length; j++) { // внутренний цикл
            if (arr[i] + arr[j] === summa) { // проверяем сумму, равна ли она 25
                console.log(`Пара: ${arr[i]} + ${arr[j]} = ${summa}`);
                return; // если да, то выводим результат и останавливаем, нет - 
                        //продолжаем проверять
            }
        }
    }
    console.log("Пара не найдена");
}

findSum(numbers4, 25);
//findSum(numbers4, 100);

// Средняя задача
// Напишите программу, которая принимает строку из букв и цифр (например, "a1b2c3d4"), и создает два массива отдельно с числами и отдельно с буквами из этой строки: [1, 2, 3, 4] [a, b , c, d]

let inputStr1 = "a1b2c3d4";
function separate(str) {
    let letters = [];  // Массив для букв
    let numbers = [];  // Массив для чисел

    for (let char of str) {
        if (!isNaN(char) && char !== " ") {  
            numbers.push(Number(char));  // Если это число, добавляем в numbers
        } else {
            letters.push(char);  // Если буква, добавляем в letters
        }
    }

    console.log("Числа:", numbers);
    console.log("Буквы:", letters);
}

// Тестируем

separate(inputStr1); // Числа: (4) [1, 2, 3, 4]
                    // Буквы: (4) ['a', 'b', 'c', 'd']

// 1.Создаём два пустых массива: letters для букв и numbers для цифр
//2. Перебираем каждый символ в строке (for...of). 
//3. Проверяем, является ли символ числом:
//!isNaN(char) — проверяет, является ли char числом.
//char !== ' ' — чтобы исключить пробелы (если вдруг они есть).
//Если это число, добавляем его в numbers, предварительно превращая в Number().
//Иначе добавляем в letters.
//4. Выводим два массива в консоль.
                    

// Сложная задача
// Дан массив строк, например ["abcd", "def", "ghiab", "jklaf", "asdgdfhfgh"]. Объедините их в одну строку, добавив между ними символ -, но только между строками, где колиечство букв совпадает.   
let words = ["abcd", "def", "ghiab", "jklaf", "asdgdfhfgh"];
function joinStrings(arr) {
    let grouped = {}; // Объект для группировки строк по длине

    // Группируем строки по их длине
    for (let i = 0; i < arr.length; i++) {
        let str = arr[i];
        let length = str.length;
        if (!grouped[length]) {
            grouped[length] = [];
        }
        grouped[length].push(str);
    }

    // Объединяем строки внутри каждой группы через "-"
    let result = [];
    for (let length in grouped) {
        result.push(grouped[length].join("-"));
    }

    return result.join(" ");  // Объединяем группы через пробел
}

// Тестируем
console.log(joinStrings(words));